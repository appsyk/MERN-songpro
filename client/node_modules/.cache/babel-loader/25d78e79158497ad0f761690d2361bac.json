{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\MERN\\\\MERN-songpro\\\\client\\\\src\\\\Cutube.js\";\nimport './greenfair/css/style.css';\nimport './greenfair/css/isotope/style.css';\nimport './greenfair/css/animate.min.css';\nimport './greenfair/css/bootstrap.min.css';\nimport './greenfair/css/carousel.css';\nimport './greenfair/css/font-awesome.min.css';\nimport './greenfair/css/responsive.css';\nimport React from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport Youtube from './API/Youtube';\nimport VideoList from './Modules/VideoList';\nimport VideoDetail from './Modules/VideoDetail';\nimport HomePage from './HomePage';\nimport SpinSearch from './Modules/SpinSearch';\n\nvar CuTube = /*#__PURE__*/function (_React$Component) {\n  _inherits(CuTube, _React$Component);\n\n  function CuTube() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CuTube);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CuTube)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      vids: [],\n      selectedVid: null,\n      response: null\n    };\n\n    _this.onTermSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(term) {\n        var response1, response, msg, msg1, msg2;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://www.omdbapi.com/?t=\".concat(term, \"&apikey=af7bfde9\"), {\n                  params: {\n                    query: term\n                  }\n                });\n\n              case 2:\n                response1 = _context.sent;\n                _context.next = 5;\n                return Youtube.get('/search', {\n                  params: {\n                    q: \"\".concat(term, \" songs\")\n                  }\n                }).catch(function (err) {\n                  if (err) {\n                    alert(\"There is a technical problem in our system and it's \".concat(err.response.data.error.errors[0].reason, \".\\nPlease try again after some time or Enjoy watching liked videos.\"));\n                    console.log(\"There is a technical problem in our system and it's \".concat(err.response.data.error.errors[0].reason));\n                  }\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (response) {\n                  if (response.status === 200) {\n                    msg = new SpeechSynthesisUtterance(\"Your result is ready\");\n                    msg.volume = 1;\n                    msg.rate = 1;\n                    msg.pitch = 0.8;\n                    msg.lang = 'en-US';\n                    window.speechSynthesis.speak(msg);\n                  } else if (response.status === 404) {\n                    msg1 = new SpeechSynthesisUtterance(\"No results found.........sorry\");\n                    msg1.volume = 1;\n                    msg1.rate = 1;\n                    msg1.pitch = 0.8;\n                    msg1.lang = 'en-US';\n                    window.speechSynthesis.speak(msg1);\n                  } else {\n                    msg2 = new SpeechSynthesisUtterance(\"We are preparing your result.\");\n                    msg2.volume = 1;\n                    msg2.rate = 1;\n                    msg2.pitch = 0.8;\n                    msg2.lang = 'en-US';\n                    window.speechSynthesis.speak(msg2);\n                  }\n\n                  console.log('checking response type for an error', response);\n\n                  _this.setState({\n                    vids: response.data.items,\n                    response: response1.data.Response\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onVidSelect = function (video) {\n      _this.setState({\n        selectedVid: video\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CuTube, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"maincomp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SearchBar, {\n        onFormSubmitProp: this.onTermSubmit,\n        spinStop: this.state.response,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }), this.state.response ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(VideoDetail, {\n        video: this.state.selectedVid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 38\n        }\n      })), this.state.vids[0] === undefined ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"not-show1\",\n        style: {\n          textAlign: 'center'\n        },\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 70\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border\",\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          width: '10rem',\n          height: '10rem',\n          fontSize: '30px',\n          marginTop: '15%'\n        },\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, \"Loading...\"))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        id: \"not-show1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"iframe\", {\n        id: \"video-iframe\",\n        allowFullScreen: \"allowfullscreen\",\n        className: \"main-video-frame\",\n        title: \"video player\",\n        src: \"https://www.youtube.com/embed/\".concat(this.state.vids[0].id.videoId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        id: \"not-show2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, \"Related Videos:\"), /*#__PURE__*/React.createElement(VideoList, {\n        onSelectVid: this.onVidSelect,\n        vidList: this.state.vids,\n        key: this.state.vids,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(SpinSearch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }))) : /*#__PURE__*/React.createElement(HomePage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      })));\n    }\n  }]);\n\n  return CuTube;\n}(React.Component);\n\nexport default CuTube;","map":{"version":3,"sources":["C:/Users/dell/Documents/MERN/MERN-songpro/client/src/Cutube.js"],"names":["React","axios","SearchBar","Youtube","VideoList","VideoDetail","HomePage","SpinSearch","CuTube","state","vids","selectedVid","response","onTermSubmit","term","get","params","query","response1","q","catch","err","alert","data","error","errors","reason","console","log","status","msg","SpeechSynthesisUtterance","volume","rate","pitch","lang","window","speechSynthesis","speak","msg1","msg2","setState","items","Response","onVidSelect","video","undefined","textAlign","color","width","height","fontSize","marginTop","id","videoId","Component"],"mappings":"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","sourcesContent":["import './greenfair/css/style.css';\r\nimport './greenfair/css/isotope/style.css';\r\nimport './greenfair/css/animate.min.css';\r\nimport './greenfair/css/bootstrap.min.css';\r\nimport './greenfair/css/carousel.css';\r\nimport './greenfair/css/font-awesome.min.css';\r\nimport './greenfair/css/responsive.css';\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport Youtube from './API/Youtube';\r\nimport VideoList from './Modules/VideoList';\r\nimport VideoDetail from './Modules/VideoDetail';\r\nimport HomePage from './HomePage';\r\n\r\nimport SpinSearch from './Modules/SpinSearch';\r\n\r\nclass CuTube extends React.Component {\r\n\r\n    state = {\r\n        vids: [],\r\n        selectedVid: null,\r\n        response: null\r\n\r\n    };\r\n\r\n    onTermSubmit = async (term) => {\r\n\r\n        const response1 = await axios.get(`https://www.omdbapi.com/?t=${term}&apikey=af7bfde9`, {\r\n            params: { query: term },\r\n        });\r\n\r\n        var response = await Youtube.get('/search', {\r\n            params: {\r\n                q: `${term} songs`\r\n            }\r\n            \r\n        }).catch(err => {\r\n            if(err){\r\n                alert(`There is a technical problem in our system and it's ${err.response.data.error.errors[0].reason}.\\nPlease try again after some time or Enjoy watching liked videos.`)\r\n                console.log(`There is a technical problem in our system and it's ${err.response.data.error.errors[0].reason}`)\r\n            }\r\n        })\r\n\r\n        if(response){\r\n            if (response.status === 200) {\r\n                var msg = new SpeechSynthesisUtterance(`Your result is ready`);\r\n                msg.volume = 1;\r\n                msg.rate = 1;\r\n                msg.pitch = 0.8;\r\n                msg.lang = 'en-US';\r\n                window.speechSynthesis.speak(msg);\r\n            }else if(response.status === 404){\r\n                var msg1 = new SpeechSynthesisUtterance(`No results found.........sorry`);\r\n                msg1.volume = 1;\r\n                msg1.rate = 1;\r\n                msg1.pitch = 0.8;\r\n                msg1.lang = 'en-US';\r\n                window.speechSynthesis.speak(msg1);\r\n            }\r\n            else{\r\n                var msg2 = new SpeechSynthesisUtterance(`We are preparing your result.`);\r\n                msg2.volume = 1;\r\n                msg2.rate = 1;\r\n                msg2.pitch = 0.8;\r\n                msg2.lang = 'en-US';\r\n                window.speechSynthesis.speak(msg2);\r\n            }\r\n            console.log('checking response type for an error', response)\r\n            this.setState({\r\n                vids: response.data.items,\r\n                response: response1.data.Response,\r\n            })\r\n        }\r\n\r\n    };\r\n    onVidSelect = (video) => {\r\n        this.setState({ selectedVid: video });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"\" >\r\n                <div className=\"maincomp\">\r\n\r\n                    <SearchBar onFormSubmitProp={this.onTermSubmit} spinStop={this.state.response} />\r\n                    {this.state.response ? (\r\n                        <div className=''>\r\n                            <div className=''>\r\n                                <div><VideoDetail video={this.state.selectedVid} /></div>\r\n                                {this.state.vids[0] === undefined ? (<div id='not-show1' style={{ textAlign: 'center' }} className='' >\r\n                                    <div className=\"spinner-border\" style={{ color: 'white', textAlign: 'center', width: '10rem', height: '10rem', fontSize: '30px', marginTop: '15%' }} role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n\r\n                                </div>) : (<div className='' id='not-show1'>\r\n                                    <iframe id=\"video-iframe\" allowFullScreen=\"allowfullscreen\" className=\"main-video-frame\" title='video player' src={`https://www.youtube.com/embed/${this.state.vids[0].id.videoId}`} />\r\n                                </div>)}\r\n\r\n                                <div className='container' id='not-show2'>\r\n                                    <h3 style={{ color: 'white' }}>Related Videos:</h3>\r\n                                    <VideoList onSelectVid={this.onVidSelect} vidList={this.state.vids} key={this.state.vids} />\r\n                                </div>\r\n\r\n                                <SpinSearch />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : (\r\n                            <HomePage />\r\n\r\n                        )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CuTube;"]},"metadata":{},"sourceType":"module"}